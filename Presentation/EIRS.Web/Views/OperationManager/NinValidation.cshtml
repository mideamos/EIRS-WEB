@using System.Linq
@model EIRS.Web.Models.NinValidationViewModel

@{
    ViewBag.Title = "Nin Validation";
}

<div class="title">
    <h1>My Operations - NIN VALIDATION</h1>
    <hr>
</div>

<form id="requestForm" method="post" action="~/OperationManager/NinValidation">

    <div class="portlet light">
        <div class="portlet-title">
            <div class="caption">Validate NIN</div>
            <div class="actions">
                <button style="background-color: green; color: white; border-radius: 12px; padding: 10px 20px; border: none; display: none;" type="submit" id="submitButton">
                    Select All
                </button>
            </div>
        </div>
        <div class="portlet-body">

            <div id="divLoader" style="display:none;">
                <img src="~/Content/Images/ajax-loader-modal-spin.gif" alt="Loader" />
                <h2>Please hold, your request is being processed.</h2>
            </div>
            <div id="divLoaderPage">
                @if (ViewBag.Message != null)
                {
                    <div class="alert alert-danger">
                        @ViewBag.Message
                    </div>
                }
                <table class="dt-responsive table table-bordered v-middle" width="100%" id="tblNinvalidation">
                    <thead class="red-th">
                        <tr>
                            <th>RIN</th>
                            <th>Individual Name</th>
                            <th>TIN</th>
                            <th class="none">NIN</th>
                            <th>Address</th>
                            <th>NIN Status</th>
                            <th class="action-th all">
                                Select All
                                <input type="checkbox" id="checkAll" />
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.NINIndividuals)
                        {
                            <tr>
                                <td>@item.IndividualRIN</td>
                                <td>@item.IndividualName</td>
                                <td>@item.Tin</td>
                                <td>@item.NIN</td>
                                <td>@item.ContactAddress</td>
                                <td>@item.NINStatus</td>
                                <td>
                                    <input type="checkbox" class="rowCheckbox" value="@item.NIN" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button style="background-color: white; color: white; border-radius: 12px; padding: 10px 20px; border: none;"
                        type="button" id="loadNextBatchButton">
                    Load Next 10,000
                </button>

            </div>
        </div>
    </div>
</form>




@section Footer {

    <!-- jQuery and DataTables -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">

    <script>
            // Function to load the next 1000 records
    function loadNextBatch() {
        // Show loader while processing the request
        $("#divLoaderPage").hide();
        $("#divLoader").show();

        // Get the anti-forgery token value from the form
        var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

        // Send an AJAX request to the NinValidation action method
        $.ajax({
            url: '@Url.Action("NinValidation", "OperationManager")',
            type: 'POST',
            data: {
                pageSize: 10000,  // Send page size as 10000
            },
            success: function (response) {
                // Handle the successful response, e.g., update the table with new data
                $("#divLoader").hide();
                $("#divLoaderPage").show();

                if (response.success) {
                    // Handle success case, such as updating the data in the table
                    alert("Loaded next 1000 records successfully.");
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function (xhr, status, error) {
                $("#divLoader").hide();
                $("#divLoaderPage").show();
                alert('Error: ' + error);
            }
        });
    }

        $(document).ready(function () {
            $('#loadNextBatchButton').click(function () {
                loadNextBatch();
            });

            // Initialize DataTable
            $('#tblNinvalidation').DataTable({
                "searching": true, // Enables the search box
                "paging": true, // Enables pagination
                "info": true, // Hides table info (optional)
                "lengthChange": true, // Disables page length change (optional)
                "order": [[0, 'asc']], // Default sorting by the first column (RIN)
                "columnDefs": [
                    { "orderable": true, "targets": [6] } // Makes the 'Check All' column unsortable
                ]
            });

            // 'Select All' checkbox functionality
            $('#checkAll').click(function () {
                $('.rowCheckbox').prop('checked', this.checked);
                updateSubmitButtonVisibility();
            });

            // Individual row checkbox click event
            $('.rowCheckbox').click(function () {
                if (!this.checked) {
                    $('#checkAll').prop('checked', false);
                } else {
                    if ($('.rowCheckbox:checked').length === $('.rowCheckbox').length) {
                        $('#checkAll').prop('checked', true);
                    }
                }
                updateSubmitButtonVisibility();
            });

            // Update the visibility of the "Submit" button based on checkbox selection
            function updateSubmitButtonVisibility() {
                if ($('.rowCheckbox:checked').length > 0) {
                    $('#submitButton').show();
                } else {
                    $('#submitButton').hide();
                }
            }

            // Initial visibility check for the submit button
            updateSubmitButtonVisibility();

            // Form submission event
            $('#requestForm').submit(function (event) {
                event.preventDefault();
                var selectedIds = [];
                $('.rowCheckbox:checked').each(function () {
                    selectedIds.push($(this).val());
                });

                // If no checkboxes are selected, prevent form submission
                if (selectedIds.length === 0) {
                    alert('Please select at least one item.');
                    event.preventDefault();
                    return;
                }

                // Append the selected IDs to the form as hidden inputs
                for (var i = 0; i < selectedIds.length; i++) {
                    $(this).append('<input type="hidden" name="selectedIds[]" value="' + selectedIds[i] + '" />');
                }

                // Display loader and hide the form content
                $("#divLoaderPage").hide();
                $("#divLoader").show();

                          // Get the anti-forgery token value from the form
                var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

                // AJAX call to getNINLoadData
                $.ajax({
                    url: '@Url.Action("getNINLoadData", "OperationManager")',
                    type: 'POST',
                    data: {
                        selectedIds: selectedIds,
                        __RequestVerificationToken: antiForgeryToken // Include token
                    },
                    success: function (response) {
                        // Handle the successful response, possibly updating a portion of the page
                        $("#divLoader").hide();

                        if (response.success) {
                            // Show success message
                            alert(response.message);
                        } else {
                            // Show error message
                            alert('Error: ' + response.message);
                        }

                        $("#divLoaderPage").show();

                        // Reload the page after successful response
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        $("#divLoader").hide();
                        alert('Error: ' + error);
                    }
                });

            });


        });
    </script>
}

<style>
    .pagination-list {
        list-style-type: none;
        display: flex;
        justify-content: center;
        padding: 0;
    }

        .pagination-list li {
            margin: 0 5px;
        }

        .pagination-list a {
            padding: 10px 15px;
            text-decoration: none;
            background-color: #f1f1f1;
            color: #333;
            border-radius: 5px;
            border: 1px solid #ddd;
            transition: background-color 0.3s, color 0.3s;
        }

            .pagination-list a.active {
                background-color: #98ff98; /* Mint color for active button */
                color: white;
            }

            .pagination-list a:hover:not(.active) {
                background-color: #ddd;
            }

            .pagination-list a.disabled {
                pointer-events: none;
                color: #ccc;
                background-color: #eee;
            }
</style>

