@model EIRS.Models.APIViewModel

@{
    ViewBag.Title = "Edit API";
}


<div class="title">
    <h1>
        Manage API : Edit API
    </h1>
    <hr>
</div>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Edit API's
        </div>
        <div class="actions">
            <a href="@Url.Action("List","API")" class="btn btn-redtheme"> Cancel </a>
        </div>
    </div>
    <div class="portlet-body">
        @using (Html.BeginForm("Edit", "API", FormMethod.Post, htmlAttributes: new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.APIID, htmlAttributes: new { @value = Model.APIID, @id = "hdnAPIID" })
            @Html.HiddenFor(model => model.DocumentPath, htmlAttributes: new { @value = Model.DocumentPath })

            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    @ViewBag.Message
                </div>
            }

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.APIName, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.APIName, htmlAttributes: new { @class = "form-control", @tabindex = "1", @placeholder = "Enter API Name", @id = "txtAPIName" })
                        @Html.ValidationMessageFor(model => model.APIName, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.APIDescription, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.APIDescription, htmlAttributes: new { @class = "form-control", @tabindex = "2", @placeholder = "Enter API Description", @Rows = "5" })
                        @Html.ValidationMessageFor(model => model.APIDescription, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DocumentPath, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            <div class="fileinput @(Model != null && !string.IsNullOrWhiteSpace(Model.DocumentPath) ? "fileinput-exists" : "fileinput-new")" data-provides="fileinput">
                                <div class="input-group input-large">
                                    <div class="form-control uneditable-input input-fixed input-medium" data-trigger="fileinput">
                                        <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                        <span class="fileinput-filename"> @(Model != null ? Model.DocumentPath : "")</span>
                                    </div>
                                    <span class="input-group-addon btn default btn-file">
                                        <span class="fileinput-new"> Select file </span>
                                        <span class="fileinput-exists"> Change </span>
                                        @Html.TextBoxFor(m => m.APIDocument, new { type = "file", id = "fuAPIDocument", name = "fuAPIDocument", @accept = "application/pdf" })
                                    </span>
                                    <a href="javascript:;" class="input-group-addon btn red fileinput-exists" data-dismiss="fileinput"> Remove </a> &nbsp;&nbsp;&nbsp;

                                    @if (!string.IsNullOrWhiteSpace(Model.DocumentPath))
                                    {
                                        <a href="@Url.Action("DownloadFile","Home",new { @type = "APIDocument", @documentId = Model.APIID})" class="input-group-addon btn btn-theme" target="_blank">Download</a>
                                    }
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.APIDocument, "", htmlAttributes: new { @class = "help-block" })


                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.CheckBoxFor(model => model.Active, new Dictionary<string, object> { { "data-checkbox", "icheckbox_square-green" }, { "class", "icheck" }, { "tabindex", "3" } })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="text-right col-sm-12">
                    <div class="form-group">
                        <br />
                        <input type="submit" class="btn btn-theme" tabindex="7" value="Update" />
                    </div>
                </div>
            </div>
        }
    </div>

</div>
