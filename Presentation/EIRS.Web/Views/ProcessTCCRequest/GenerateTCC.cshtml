@model EIRS.Web.Models.GenerateViewModel
@using EIRS.Common

@{
    ViewBag.Title = "Generate eTCC";
    usp_GetTCCRequestDetails_Result mObjRequestData = (usp_GetTCCRequestDetails_Result)ViewBag.RequestData;
    IEnumerable<PDFTemplateFieldList> lstTemplateField = (IEnumerable<PDFTemplateFieldList>)ViewBag.TemplateFieldList;
    //IList<PDFTemplateFieldList> lstTemplateField = (IList<PDFTemplateFieldList>)ViewBag.TemplateFieldList;
    int intTabIndex = 0;


}

@section Header {
    <link href="~/Content/Plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />
}


<input type="hidden" id="hdnStageID" value="@((int)EnumList.TCCRequestStage.Generate_eTCC)" />

<div class="title">
    <h1>
        TCC Request - Generate eTCC
    </h1>
    <hr>
</div>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Request Information
        </div>
        <div class="actions">
            <a href="@Url.Action("Details","ProcessTCCRequest", new { reqId = Model.RequestID })" class="btn btn-theme btn-outline">
                Cancel
            </a>
        </div>
    </div>
    <div class="row view-form">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label bold">Request Ref No: </label>
                <div class="form-control-static">
                    @mObjRequestData.RequestRefNo
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Request Date: </label>
                <div class="form-control-static">
                    @CommUtil.GetFormatedDate(mObjRequestData.RequestDate)
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Tax Year: </label>
                <div class="form-control-static">
                    @mObjRequestData.TaxYear
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label bold">Tax Payer Name: </label>
                <div class="form-control-static">
                    @mObjRequestData.FirstName @mObjRequestData.LastName
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Tax Payer EIN: </label>
                <div class="form-control-static">
                    @mObjRequestData.IndividualRIN
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Mobile Number: </label>
                <div class="form-control-static">
                    @mObjRequestData.MobileNumber1
                </div>
            </div>
        </div>
    </div>
</div>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Document Preview
        </div>
        <div class="actions">
            @*@if (Model.ReceiptStatusID == 1 && string.IsNullOrWhiteSpace(Model.SignedPath) && string.IsNullOrWhiteSpace(Model.GeneratedPath))
                {
                    <a disabled title="Old Treasury Receipt - No PDF File" class="btn btn-theme btn-outline">
                        Download
                    </a>
                }
                else
                {
                    <a href="@Url.Action("Download", "TreasuryReceipt", new { id = Model.ReceiptID, name = Model.ReceiptRefNo })" target="_blank" class="btn btn-theme btn-outline">
                        Download
                    </a>
                }*@
        </div>
    </div>
    <div class="portlet-body">
        <div class="row">
            <div class="col-md-12">
                <div class="light-card document">
                    <div class="document-pagination">
                        <div class="pull-left">
                            <button id="btnPrev" class="btn btn-primary btn-round"><i class="fa fa-angle-left"></i></button>
                            <button id="btnNext" class="btn btn-primary btn-round"><i class="fa fa-angle-right"></i></button>
                        </div>
                        <div class="pull-right">
                            <span>Page: <span id="spnCurrentPage"></span> / <span id="spnPageCount"></span></span>
                        </div>
                    </div>
                    @*<div class="document-load">
                            <i class="ion-loading-c"></i>
                        </div>*@
                    <div class="text-center signer-body">
                        <h3 style="color: #0000FF"></h3>
                        <div>
                            <a target="_blank" href="@Url.Action("GetTCC", "ProcessTCCRequest")">
                                <button id="bttViewTcc" type="submit" class="btn btn-theme"> Click Here To View Your Generated TCC </button>
                            </a>

                            <a href="@Url.Action("Details","ProcessTCCRequest", new { reqId = Model.RequestID })" class="btn btn-theme btn-outline">
                                Back To Details
                            </a>


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@*@using (Html.BeginForm("GenerateTCC", "ProcessTCCRequest", FormMethod.Post, htmlAttributes: new { @id = "frmGenerateTCC" }))
    {
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">Generate eTCC</div>
                <div class="actions">

                </div>
            </div>
            <div class="portlet-body">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.RGID, htmlAttributes: new { @value = Model.RGID })
                @Html.HiddenFor(model => model.RequestID, htmlAttributes: new { @value = Model.RequestID, @id = "hdnRequestID" })
                @Html.HiddenFor(model => model.SEDE_DocumentID, htmlAttributes: new { @value = Model.SEDE_DocumentID })


                @if (ViewBag.Message != null)
                {
                    <div class="alert alert-danger">
                        @ViewBag.Message
                    </div>
                }

                @foreach (var item in lstTemplateField)
                {
                    if (intTabIndex % 2 == 0)
                    {
                        @:<div class="row">
                        }

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label @(item.IsRequired.GetValueOrDefault()?"required-star":"")">@item.FieldName</label>
                                @if (item.FieldTypeID == (int)EnumList.FieldType.Text)
                                {
                                    if (item.IsRequired.GetValueOrDefault())
                                    {
                                        @Html.TextBox("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter " + item.FieldName, @data_val_required = "Enter " + item.FieldName, @type = "text", @data_val = "true", @readonly = "readonly" })
                                        @Html.ValidationMessage("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), new { @class = "red-text" })
                                    }
                                    else
                                    {
                                        @Html.TextBox("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter " + item.FieldName, @type = "text", @readonly = "readonly" })
                                    }
                                }
                                else if (item.FieldTypeID == (int)EnumList.FieldType.Number)
                                {
                                    if (item.IsRequired.GetValueOrDefault())
                                    {
                                        @Html.TextBox("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter " + item.FieldName, @data_val_required = "Enter " + item.FieldName, @type = "text", @data_val = "true", @readonly = "readonly" })
                                        @Html.ValidationMessage("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), new { @class = "red-text" })
                                    }
                                    else
                                    {
                                        @Html.TextBox("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter " + item.FieldName, @type = "text", @readonly = "readonly" })
                                    }
                                }
                                else if (item.FieldTypeID == (int)EnumList.FieldType.Date)
                                {
                                    if (item.IsRequired.GetValueOrDefault())
                                    {
                                        @Html.TextBox("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control datepicker", @placeholder = "Enter " + item.FieldName, @data_val_required = "Enter " + item.FieldName, @type = "text", @data_val = "true", @readonly = "readonly" })
                                        @Html.ValidationMessage("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), new { @class = "red-text" })
                                    }
                                    else
                                    {
                                        @Html.TextBox("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter " + item.FieldName, @type = "text", @readonly = "readonly" })
                                    }
                                }
                                else if (item.FieldTypeID == (int)EnumList.FieldType.Combo)
                                {
                                    if (item.IsRequired.GetValueOrDefault())
                                    {
                                        @Html.DropDownList("cbo_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), new SelectList(item.FieldComboValue.Split(new char[] { 'ψ' }), item.FieldValue), "Select " + item.FieldName, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control bs-select", @data_val_required = "Enter " + item.FieldName, @data_val = "true", @readonly = "readonly" })
                                        @Html.ValidationMessage("cbo_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), new { @class = "red-text" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("cbo_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), new SelectList(item.FieldComboValue.Split(new char[] { 'ψ' }), item.FieldValue), "Select " + item.FieldName, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control bs-select", @readonly = "readonly" })
                                    }
                                }
                                else if (item.FieldTypeID == (int)EnumList.FieldType.Memo)
                                {
                                    if (item.IsRequired.GetValueOrDefault())
                                    {
                                        @Html.TextArea("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter " + item.FieldName, @data_val_required = "Enter " + item.FieldName, @type = "text", @data_val = "true", @Rows = "5", @readonly = "readonly" })
                                        @Html.ValidationMessage("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), new { @class = "red-text" })
                                    }
                                    else
                                    {
                                        @Html.TextArea("txt_" + item.FieldID + "_" + item.FieldName.ToSeoUrl(), item.FieldValue, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter " + item.FieldName, @type = "text", @Rows = "5", @readonly = "readonly" })
                                    }
                                }
                            </div>
                        </div>
                        if (intTabIndex % 2 == 0)
                        {
                        @:</div>
                    }
                    else if (intTabIndex == lstTemplateField.Count())
                    {
                    @:</div>
                }

            }

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label></label>
                            <div class="input-group">
                                <div class="icheck-list">
                                    <label>
                                        @Html.CheckBoxFor(model => model.IsExpirable, new { @class = "icheck", @data_checkbox = "icheckbox_square-green", @tabindex = ++intTabIndex, @id = "chkIsExpirable" }) Does Not Expiry
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.ExpiryDate, "{0:dd/MM/yyyy}", htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter Expiry Date", @id = "txtExpiryDate" })
                            @Html.ValidationMessageFor(m => m.ExpiryDate, "", new { @class = "red-text" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label required-star" })
                            @Html.TextBoxFor(model => model.Reason, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter Reason" })
                            @Html.ValidationMessageFor(m => m.Reason, "", new { @class = "red-text" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label required-star" })
                            @Html.TextBoxFor(model => model.Location, htmlAttributes: new { @tabindex = ++intTabIndex, @class = "form-control", @placeholder = "Enter Location" })
                            @Html.ValidationMessageFor(m => m.Location, "", new { @class = "red-text" })
                        </div>
                    </div>
                </div>

            </div>
            <div class="portlet-footer text-right">

                <button type="submit" class="btn btn-theme"> Save </button>
            </div>
            </div>
        }*@

@{ Html.RenderPartial("_BindInternalNotes"); }

@section Footer {
    <script type="text/javascript" src="/Content/plugins/plupload/js/plupload.full.min.js"></script>
    <script src="~/Content/Plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Scripts/jsGenerateTCC.js?v=@GlobalDefaultValues.VersionNumber"></script>
    <script type="text/javascript" src="~/Scripts/jsProcessTCCNotes.js?v=@EIRS.Common.GlobalDefaultValues.VersionNumber"></script>
}