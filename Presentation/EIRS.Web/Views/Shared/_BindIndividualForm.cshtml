@model EIRS.Models.IndividualViewModel

<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.TaxPayerTypeID, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.TaxPayerTypeID, (SelectList)ViewBag.TaxPayerTypeList, "Select Tax Payer Type", htmlAttributes: new { @tabindex = "2", @class = "form-control bs-select", @id = "cboTaxPayerTypeID", @disabled = "true" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.GenderID, htmlAttributes: new { @class = "control-label required-star" })
            @Html.DropDownListFor(model => model.GenderID, (SelectList)ViewBag.GenderList, "Select Gender", htmlAttributes: new { @tabindex = "3", @id = "cboGender", @class = "form-control bs-select" })
            @Html.ValidationMessageFor(model => model.GenderID, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.TitleID, htmlAttributes: new { @class = "control-label required-star" })
            @Html.DropDownListFor(model => model.TitleID, (SelectList)ViewBag.TitleList, "Select Title", htmlAttributes: new { @tabindex = "4", @id = "cboTitle", @class = "form-control bs-select" })
            @Html.ValidationMessageFor(model => model.TitleID, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label required-star" })
            @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new
            {
                @id = "FirstName",
                @class = "form-control",
                @tabindex = "5",
                @placeholder = "Enter Individual's first name",
                @value = Model.FirstName ?? ViewBag.NINResult?.FirstName,
            
            })

            @Html.ValidationMessageFor(model => model.FirstName, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label required-star" })
            @Html.TextBoxFor(model => model.LastName, htmlAttributes: new
       {
           @id = "LastName",
           @class = "form-control",
           @tabindex = "6",
           @placeholder = "Enter Individual's last name",
           @value = Model.LastName ?? ViewBag.NINResult?.LastName,
      

            })
            @Html.ValidationMessageFor(model => model.LastName, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.MiddleName, htmlAttributes: new
       {
           @id = "MiddleName",
           @class = "form-control",
           @tabindex = "7",
           @placeholder = "Enter Individual's middle name",
           @value = Model.MiddleName ?? ViewBag.NINResult?.MiddleName,
       
            })
            @Html.ValidationMessageFor(model => model.MiddleName, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.DOB, htmlAttributes: new
            {
                @tabindex = "8",
                @data_mask = "99/99/9999",
                @data_mask_placeholder = "DD/MM/YYYY",
                @placeholder = "DD/MM/YYYY",
                @class = "form-control"
            })
            @Html.ValidationMessageFor(model => model.DOB, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.TIN, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.TIN, htmlAttributes: new { @class = "form-control", @tabindex = "9", @placeholder = "Enter individuals’ tax identification number from JTB if available" })
            @Html.ValidationMessageFor(model => model.TIN, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber1, htmlAttributes: new { @class = "control-label required-star" })
            <div class="input-group">
                <span class="input-group-addon"> ( 234 - 0 - ) </span>
                @Html.TextBoxFor(model => model.MobileNumber1, htmlAttributes: new { @class = "form-control", @tabindex = "10", @placeholder = "Enter mobile phone number of individual" })
            </div>
            @Html.ValidationMessageFor(model => model.MobileNumber1, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber2, htmlAttributes: new { @class = "control-label" })
            <div class="input-group">
                <span class="input-group-addon"> ( 234 - 0 - ) </span>
                @Html.TextBoxFor(model => model.MobileNumber2, htmlAttributes: new { @class = "form-control", @tabindex = "11", @placeholder = "Enter alternative mobile phone number of individual" })
            </div>
            @Html.ValidationMessageFor(model => model.MobileNumber2, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress1, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.EmailAddress1, htmlAttributes: new { @class = "form-control", @tabindex = "12", @placeholder = "Enter individual email address" })
            @Html.ValidationMessageFor(model => model.EmailAddress1, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress2, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.EmailAddress2, htmlAttributes: new { @class = "form-control", @tabindex = "13", @placeholder = "Enter individual alternative email address" })
            @Html.ValidationMessageFor(model => model.EmailAddress2, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        @{
            // Define isSuccess variable once so it's available throughout the form group.
            var isSuccess = !string.IsNullOrEmpty(Model.NIN) || !string.IsNullOrEmpty(ViewBag.NINResult?.NIN);
        }

        <div class="form-group">
            @Html.LabelFor(model => model.NIN, htmlAttributes: new { @class = "control-label required-star" })
            <div class="input-group">
                @Html.TextBoxFor(model => model.NIN, htmlAttributes: new
                {
                    @id = "NIN",
                    @class = "form-control",
                    @tabindex = "14",
                    @placeholder = "Enter NIN Details",
                    @value = Model.NIN ?? ViewBag.NINResult?.NIN
                })

                <span class="input-group-addon">
                    @if (!string.IsNullOrEmpty(ViewBag.NINStatus) && ViewBag.NINStatus == "Valid")
                    {
                        <i class="fa fa-check-square" style="font-size:18px;color:green"></i>
                    }
                    else if (ViewBag.NINStatus == "Invalid")
                    {
                        <i class="fa fa-close" style="font-size:18px;color:red"></i>
                    }
                    else if (ViewBag.NINStatus == "Not verified")
                    {
                        <i class="fa fa-square-o" style="font-size: 18px; color: yellow"></i>
                    }
                    else
                    {
                        <i class="fa fa-square" style="font-size: 18px; color: gray"></i>
                    }
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.NIN, "", htmlAttributes: new { @class = "help-block" })
        </div>



    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.TaxOfficeID, htmlAttributes: new { @class = "control-label required-star" })
            @Html.DropDownListFor(model => model.TaxOfficeID, (SelectList)ViewBag.TaxOfficeList, "Select Tax Office", htmlAttributes: new { @tabindex = "15", @id = "cboTaxOffice", @class = "form-control bs-select", @width = "100%" })
            @Html.ValidationMessageFor(model => model.TaxOfficeID, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.MaritalStatusID, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.MaritalStatusID, (SelectList)ViewBag.MaritalStatusList, "Select Marital Status", htmlAttributes: new { @tabindex = "16", @id = "cboMaritalStatus", @class = "form-control bs-select", @data_select_width = "100%" })
            @Html.ValidationMessageFor(model => model.MaritalStatusID, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.NationalityID, htmlAttributes: new { @class = "control-label required-star" })
            @Html.DropDownListFor(model => model.NationalityID, (SelectList)ViewBag.NationalityList, "Select Nationality", htmlAttributes: new { @tabindex = "17", @id = "cboNationality", @class = "form-control bs-select", @width = "100%" })
            @Html.ValidationMessageFor(model => model.NationalityID, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.EconomicActivitiesID, htmlAttributes: new { @class = "control-label required-star" })
            @Html.DropDownListFor(model => model.EconomicActivitiesID, (SelectList)ViewBag.EconomicActivitiesList, "Select Economic Activities", htmlAttributes: new { @tabindex = "18", @class = "form-control bs-select", @width = "100%" })
            @Html.ValidationMessageFor(model => model.EconomicActivitiesID, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(model => model.NotificationMethodID, htmlAttributes: new { @class = "control-label required-star" })
            @Html.DropDownListFor(model => model.NotificationMethodID, (SelectList)ViewBag.NotificationMethodList, "Select Notification Method", htmlAttributes: new { @tabindex = "19", @class = "form-control bs-select", @width = "100%" })
            @Html.ValidationMessageFor(model => model.NotificationMethodID, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.BiometricDetails, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.BiometricDetails, htmlAttributes: new { @class = "form-control", @tabindex = "21", @placeholder = "Enter Biometric Details" })
            @Html.ValidationMessageFor(model => model.BiometricDetails, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label required-star" })
            @Html.TextBoxFor(model => model.ContactAddress, htmlAttributes: new
               {
                   @id = "ContactAddress",
                   @class = "form-control",
                   @tabindex = "20",
                   @placeholder = "Enter Contact Address",
                   @value = Model.ContactAddress ?? ViewBag.NINResult?.ContactAddress,

                   @Rows = "3"
               })
            @Html.ValidationMessageFor(model => model.ContactAddress, "", htmlAttributes: new { @class = "help-block" })
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            // Check MiddleName
            var middleName = "@(Model.MiddleName ?? ViewBag.NINResult?.MiddleName)";
            if (middleName && middleName.length > 0) {
                $('#MiddleName').prop('disabled', true);  // Disable if MiddleName has value
            } else {
                $('#MiddleName').prop('disabled', false); // Enable if MiddleName is null or empty
            }

            // Check FirstName
            var firstName = "@(Model.FirstName ?? ViewBag.NINResult?.FirstName)";
            if (firstName && firstName.length > 0) {
                $('#FirstName').prop('disabled', true);  // Disable if FirstName has value
            } else {
                $('#FirstName').prop('disabled', false); // Enable if FirstName is null or empty
            }

            // Check LastName
            var lastName = "@(Model.LastName ?? ViewBag.NINResult?.LastName)";
            if (lastName && lastName.length > 0) {
                $('#LastName').prop('disabled', true);  // Disable if LastName has value
            } else {
                $('#LastName').prop('disabled', false); // Enable if LastName is null or empty
            }

            // Check NIN
            var nin = "@(Model.NIN ?? ViewBag.NINResult?.NIN)";
            if (nin && nin.length > 0) {
                $('#NIN').prop('disabled', true);  // Disable if NIN has value
            } else {
                $('#NIN').prop('disabled', false); // Enable if NIN is null or empty
            }

            // Check ContactAddress
            var contactAddress = "@(Model.ContactAddress ?? ViewBag.NINResult?.ContactAddress)";
            if (contactAddress && contactAddress.length > 0) {
                $('#ContactAddress').prop('disabled', true);  // Disable if ContactAddress has value
            } else {
                $('#ContactAddress').prop('disabled', false); // Enable if ContactAddress is null or empty
            }
        });
    </script>
}



