@model EIRS.Models.ProfileViewModel
@using EIRS.BOL

@{
    ViewBag.Title = "Add Profiles";
}

<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-7">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-lg fa-fw fa-life-saver"></i>
                Profiles
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 text-right">
        </div>
    </div>
    <section id="widget-grid">
        <div class="row">
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-6" id="artProfile">
                <div class="jarviswidget jarviswidget-color-green" id="dvAddProfile">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-plus"></i> </span>
                        <h2>Add Profile</h2>
                    </header>
                    <div>
                        <div class="jarviswidget-editbox">
                            <input class="form-control" type="text">
                        </div>
                        <div class="widget-body no-padding">
                            @using (Html.BeginForm("Add", "Profile", FormMethod.Post, htmlAttributes: new { @class = "smart-form", @id="frmProfile" }))
                            {
                                <header>
                                    Profile Details
                                </header>

                                @Html.AntiForgeryToken()
                                @Html.ValidationBootstrap()
                                @Html.Hidden("hdnProfileID", "-1")

                                if (ViewBag.Message != null)
                                {
                                    <div class="alert alert-danger">
                                        @ViewBag.Message
                                    </div>
                                }

                                <fieldset id="fsStep1">
                                    <section>
                                        @Html.LabelFor(model => model.AssetTypeID, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.AssetTypeID, (SelectList)ViewBag.AssetTypeList, "Select Asset Type", htmlAttributes: new { @tabindex = "1", @class = "select2", @width = "100%", @id="cboAssetType" })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.AssetTypeID, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                    <section>
                                        @Html.LabelFor(model => model.TaxPayerTypeIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.TaxPayerTypeIds, (SelectList)ViewBag.TaxPayerTypeList, htmlAttributes: new { @placeholder = "Select Tax Payer Type", @id = "cboTaxPayerType", @tabindex = "2", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.TaxPayerTypeIds != null ? string.Join(",", Model.TaxPayerTypeIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.TaxPayerTypeIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                    <section>
                                        @Html.LabelFor(model => model.TaxPayerRoleIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.TaxPayerRoleIds, (SelectList)ViewBag.TaxPayerRoleList, htmlAttributes: new { @placeholder = "Select Tax Payer Role", @id = "cboTaxPayerRole", @tabindex = "3", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.TaxPayerRoleIds != null ? string.Join(",", Model.TaxPayerRoleIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.TaxPayerRoleIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                    <section>
                                        @Html.LabelFor(model => model.ProfileDescription, htmlAttributes: new { @class = "label required" })
                                        <label class="textarea">
                                            <i class="icon-append fa fa-question-circle"></i>
                                            @Html.TextAreaFor(model => model.ProfileDescription, htmlAttributes: new { @tabindex = "4", @Rows="3", @placeholder = "Enter Profile Description" })
                                            <b class="tooltip tooltip-top-right">
                                                <i class="fa fa-warning txt-color-teal"></i>
                                                Enter Profile Description
                                            </b>
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileDescription, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                    <section>
                                        @Html.LabelFor(model => model.AssetTypeStatus, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.AssetTypeStatus, (List<SelectListItem>)ViewBag.AssetStatusList, "Select Asset Status", htmlAttributes: new { @tabindex = "5", @class = "select2", @width = "100%" })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.AssetTypeStatus, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                </fieldset>
                                <fieldset id="fsStep2">
                                    <section>
                                        @Html.LabelFor(model => model.ProfileSectorIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileSectorIds, (SelectList)ViewBag.ProfileSectorList, htmlAttributes: new { @placeholder = "Select Profile Sector", @id = "cboProfileSector", @tabindex = "6", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileSectorIds != null ? string.Join(",", Model.ProfileSectorIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileSectorIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section> 
                                    <section>
                                        @Html.LabelFor(model => model.ProfileSubSectorIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileSubSectorIds, (SelectList)ViewBag.ProfileSubSectorList, htmlAttributes: new { @placeholder = "Select Profile Sub Sector", @id = "cboProfileSubSector", @tabindex = "7", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileSubSectorIds != null ? string.Join(",", Model.ProfileSubSectorIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileSubSectorIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section> 
                                    <section>
                                        @Html.LabelFor(model => model.ProfileGroupIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileGroupIds, (SelectList)ViewBag.ProfileGroupList, htmlAttributes: new { @placeholder = "Select Profile Group", @id = "cboProfileGroup", @tabindex = "8", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileGroupIds != null ? string.Join(",", Model.ProfileGroupIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileGroupIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                    <section>
                                        @Html.LabelFor(model => model.ProfileSubGroupIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileSubGroupIds, (SelectList)ViewBag.ProfileSubGroupList, htmlAttributes: new { @placeholder = "Select Profile Sub Group", @id = "cboProfileSubGroup", @tabindex = "9", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileSubGroupIds != null ? string.Join(",", Model.ProfileSubGroupIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileSubGroupIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section> 
                                    <section>
                                        @Html.LabelFor(model => model.ProfileSectorElementIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileSectorElementIds, (SelectList)ViewBag.ProfileSectorElementList, htmlAttributes: new { @placeholder = "Select Sector Element", @id = "cboProfileSectorElement", @tabindex = "10", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileSectorElementIds != null ? string.Join(",", Model.ProfileSectorElementIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileSectorElementIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                    <section>
                                        @Html.LabelFor(model => model.ProfileSectorSubElementIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileSectorSubElementIds, (SelectList)ViewBag.ProfileSectorSubElementList, htmlAttributes: new { @placeholder = "Select Sector Sub Element", @id = "cboProfileSectorSubElement", @tabindex = "11", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileSectorSubElementIds != null ? string.Join(",", Model.ProfileSectorSubElementIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileSectorSubElementIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section> 
                                    <section>
                                        @Html.LabelFor(model => model.ProfileAttributeIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileAttributeIds, (SelectList)ViewBag.ProfileAttributeList, htmlAttributes: new { @placeholder = "Select Profile Attribute", @id = "cboProfileAttribute", @tabindex = "12", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileAttributeIds != null ? string.Join(",", Model.ProfileAttributeIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileAttributeIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                    <section>
                                        @Html.LabelFor(model => model.ProfileSubAttributeIds, htmlAttributes: new { @class = "label required" })
                                        <label class="input">
                                            @Html.DropDownListFor(model => model.ProfileSubAttributeIds, (SelectList)ViewBag.ProfileSubAttributeList, htmlAttributes: new { @placeholder = "Select Profile Sub Attribute", @id = "cboProfileSubAttribute", @tabindex = "13", @class = "select2", @width = "100%", @multiple = "multiple", @data_initvalue = (Model != null && Model.ProfileSubAttributeIds != null ? string.Join(",", Model.ProfileSubAttributeIds) : "") })
                                        </label>
                                        @Html.ValidationMessageFor(model => model.ProfileSubAttributeIds, "", htmlAttributes: new { @class = "help-block" })
                                    </section>
                                </fieldset>
                                <footer>
                                    <button type="submit" class="btn btn-primary" id="btnSave">
                                        Submit
                                    </button>
                                    <a id="btnNext" class="btn btn-primary">Next</a>
                                    <a id="btnBack" class="btn btn-default">
                                        Back
                                    </a>
                                    <a id="btnMainBack" href="@Url.Action("List","Profile")" class="btn btn-default">
                                        Cancel
                                    </a>
                                </footer>
                            }
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>


@section Footer {
    <script type="text/javascript" src="~/Scripts/jsProfileDetails.js"></script>
}