@model EIRS.Web.Models.TaxPayerDocumentViewModel
@using EIRS.Common
@using EIRS.BOL

@{
    ViewBag.Title = "Corporate Tax Payer - Add New Document";
}

@section Header {
    <link href="/Content/Plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />
}

<div class="title">
    <h1>
        Corporate Tax Payer: Add New Document
    </h1>
    <hr>
</div>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Corporate Tax Payer Information
        </div>
        <div class="actions">
            <a href="@Request.UrlReferrer" class="btn btn-redtheme" id="btnCancel"> Cancel </a>
            <div class="btn-group">
                <button type="button" class="btn btn-redtheme dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Action <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a onclick="javascript:jsfn_CorporateInformation(@Model.TaxPayerID)">View Details</a>
                    </li>
                    <li>
                        <a href="@Url.Action("Edit","CaptureCorporate", new { id=Model.TaxPayerID, name =Model.TaxPayerRIN.ToSeoUrl() })">Edit Detail</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row view-form">
        <div class="col-sm-4">
            <div class="form-group">
                <label class="control-label bold">Tax Payer Type: </label>
                <div class="form-control-static">
                    @Model.TaxPayerTypeName
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Tax Payer TIN: </label>
                <div class="form-control-static">
                    @Model.TaxPayerTIN
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Mobile Number: </label>
                <div class="form-control-static">
                    @Model.ContactNumber
                </div>
            </div>
        </div>
        <div class="col-sm-8">
            <div class="form-group">
                <label class="control-label bold">Tax Payer Name: </label>
                <div class="form-control-static">
                    @Model.TaxPayerName
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Tax Payer EIN: </label>
                <div class="form-control-static">
                    @Model.TaxPayerRIN
                </div>
            </div>
            <div class="form-group">
                <label class="control-label bold">Contact  Address: </label>
                <div class="form-control-static">
                    @Model.ContactAddress
                </div>
            </div>
        </div>
    </div>
</div>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Add New Document
        </div>
        <div class="actions">

        </div>
    </div>
    <div class="portlet-body">
        @using (Html.BeginForm("AddDocument", "CaptureCorporate", FormMethod.Post, htmlAttributes: new { @id = "frmAddDocument", @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(m => m.TaxPayerID, new { @Value = Model.TaxPayerID })
            @Html.HiddenFor(m => m.TaxPayerTypeID, new { @Value = Model.TaxPayerTypeID })
            @Html.HiddenFor(m => m.TaxPayerTypeName, new { @Value = Model.TaxPayerTypeName })
            @Html.HiddenFor(m => m.TaxPayerName, new { @Value = Model.TaxPayerName })
            @Html.HiddenFor(m => m.TaxPayerTIN, new { @Value = Model.TaxPayerTIN })
            @Html.HiddenFor(m => m.TaxPayerRIN, new { @Value = Model.TaxPayerRIN })
            @Html.HiddenFor(m => m.ContactNumber, new { @Value = Model.ContactNumber })
            @Html.HiddenFor(m => m.ContactAddress, new { @Value = Model.ContactAddress })

            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    @ViewBag.Message
                </div>
            }

            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DocumentTitle, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.DocumentTitle, htmlAttributes: new { @class = "form-control", @tabindex = "1", @placeholder = "Enter Document Title" })
                        @Html.ValidationMessageFor(model => model.DocumentTitle, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DocumentFileUpload, new { @class = "control-label" })
                        <div>
                            <div class="fileinput fileinput-new" data-provides="fileinput">
                                <div class="input-group input-large">
                                    <div class="form-control uneditable-input input-fixed input-small" data-trigger="fileinput">
                                        <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                        <span class="fileinput-filename"> </span>
                                    </div>
                                    <span class="input-group-addon btn default btn-file">
                                        <span class="fileinput-new"> Select file </span>
                                        <span class="fileinput-exists"> Change </span>
                                        @Html.TextBoxFor(m => m.DocumentFileUpload, new { type = "file", id = "fuDocumentFileUpload", name = "fuUploadDocument", accept = "application/pdf" })
                                    </span>
                                    <a class="input-group-addon btn red fileinput-exists" data-dismiss="fileinput"> Remove </a>
                                </div>
                                @Html.ValidationMessageFor(m => m.DocumentFileUpload, "", new { @class = "red-text" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Notes, htmlAttributes: new { @class = "form-control", @tabindex = "3", @placeholder = "Enter Notes", @rows = "4" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="text-right col-sm-12">
                    <div class="form-group">
                        <br />
                        <input type="submit" class="btn btn-theme" tabindex="4" value="Save" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Footer {
    <script src="/Content/Plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
}
