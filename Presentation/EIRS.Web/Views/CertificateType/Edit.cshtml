@model EIRS.Web.Models.CertificateTypeViewModel

@{
    ViewBag.Title = "Update Certificate Type";
    IList<CertificateTypeFieldViewModel> LstCertificateTypeField = (IList<CertificateTypeFieldViewModel>)ViewBag.FieldList;
}

@section Header{
    <link rel="stylesheet" type="text/css" href="/Content/Plugins/typeahead/typeahead.css" />
    <link href="/Content/Plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />
}

<div class="title">
    <h1>
        Certificate Type
    </h1>
    <hr>
</div>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Update Certificate Type
        </div>
        <div class="actions">
            <a href="@Url.Action("List","CertificateType")" class="btn btn-redtheme"> Cancel </a>
        </div>
    </div>
    <div class="portlet-body">
        @using (Html.BeginForm("Edit", "CertificateType", FormMethod.Post, htmlAttributes: new { @id = "frmCertificateType", @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.CertificateTypeID, htmlAttributes: new { @value = Model.CertificateTypeID })
            @Html.HiddenFor(m => m.CertificateTemplatePath, new { @Value = (Model != null ? Model.CertificateTemplatePath : ""), @id = "hdnCertificateTemplatePath" })


            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    @ViewBag.Message
                </div>
            }

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CertificateTypeName, htmlAttributes: new { @class = "control-label required-star" })
                        @Html.TextBoxFor(model => model.CertificateTypeName, htmlAttributes: new { @class = "form-control", @tabindex = "1", @placeholder = "Enter Certificate Type Name" })
                        @Html.ValidationMessageFor(model => model.CertificateTypeName, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TaxYear, htmlAttributes: new { @class = "control-label required-star" })
                        @Html.DropDownListFor(model => model.TaxYear, (SelectList)ViewBag.YearList, "Select Tax Year", htmlAttributes: new { @class = "form-control bs-select", @tabindex = "2", @id = "cboTaxYear" })
                        @Html.ValidationMessageFor(model => model.TaxYear, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AgencyID, htmlAttributes: new { @class = "control-label required-star" })
                        @Html.DropDownListFor(model => model.AgencyID, (SelectList)ViewBag.AgencyList, "Select Agency", htmlAttributes: new { @class = "form-control bs-select", @tabindex = "3" })
                        @Html.ValidationMessageFor(model => model.TaxYear, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TemplateID, htmlAttributes: new { @class = "control-label required-star" })
                        @Html.DropDownListFor(model => model.TemplateID, (SelectList)ViewBag.PDFTemplateList, "Select Template", htmlAttributes: new { @class = "form-control bs-select", @tabindex = "4" })
                        @Html.ValidationMessageFor(model => model.TemplateID, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CNPrefix, htmlAttributes: new { @class = "control-label required-star" })
                        @Html.TextBoxFor(model => model.CNPrefix, htmlAttributes: new { @class = "form-control", @tabindex = "5", @placeholder = "Enter Prefix" })
                        @Html.ValidationMessageFor(model => model.CNPrefix, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
                        <br />
                        @Html.CheckBoxFor(model => model.Active, new Dictionary<string, object> { { "data-checkbox", "icheckbox_square-green" }, { "class", "icheck" }, { "tabindex", "2" } })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CertificateTemplatePath, new { @class = "control-label" })
                        <div>
                            <div class="fileinput @(Model != null && !string.IsNullOrWhiteSpace(Model.CertificateTemplatePath) ? "fileinput-exists" : "fileinput-new")" id="dvtemplate" data-provides="fileinput">
                                <div class="input-group input-large">
                                    <div class="form-control uneditable-input input-fixed input-small" data-trigger="fileinput">
                                        <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                        <span class="fileinput-filename"> @(Model != null ? Model.CertificateTemplatePath : "")</span>
                                    </div>
                                    <span class="input-group-addon btn default btn-file">
                                        <span class="fileinput-new"> Select file </span>
                                        <span class="fileinput-exists"> Change </span>
                                        @Html.TextBoxFor(m => m.CertificateTemplateFile, new { type = "file", id = "fuTemplateFile", @tabindex = "8", name = "fuTemplateFile", accept = ".html" })
                                    </span>
                                    <a class="input-group-addon btn red fileinput-exists removeTemplate"> Remove </a>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(m => m.CertificateTemplatePath, "", new { @class = "red-text" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", @tabindex = "5", @Rows = "6", @placeholder = "Enter Description" })
                        @Html.ValidationMessageFor(model => model.Description, "", htmlAttributes: new { @class = "help-block" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Certificate Items
        </div>
        <div class="actions">
            <a class="btn btn-redtheme" onclick="javascript: jsfn_AddCertificateItem();">
                Add Certificate Item
            </a>
        </div>
    </div>
    <div class="portlet-body" id="dvCertificateItemData">
        <table class="dt-responsive table table-bordered v-middle" width="100%" id="tblCertificateItem">
            <thead class="purple-th">
                <tr>
                    <th>Item Type</th>
                    <th>Item Name</th>
                    <th class="action-th all"></th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<div class="portlet light">
    <div class="portlet-title">
        <div class="caption">
            Custom Fields
        </div>
        <div class="actions">
            <a class="btn btn-redtheme" onclick="javascript: jsfn_AddCustomField();">
                Add Custom Fields
            </a>
        </div>
    </div>
    <div class="portlet-body" id="dvCustomFieldData">
        @{ Html.RenderPartial("_BindCustomFieldTable", LstCertificateTypeField); }
    </div>
    <div class="portlet-footer text-right">
        <button class="btn-theme btn" id="btnSaveCertificateType">Save</button>
    </div>
</div>

<div class="modal fade" id="dvCustomFieldModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="dvCustomFieldModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title" id="dvCustomFieldModalLabel">Add Custom Field</h4>
            </div>
            <div class="modal-body">
                <form id="frmCustomField">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Field Name</label>
                                @Html.TextBox("txtFieldName", "", new { @class = "form-control", @placeholder = "Enter Field Name", @tabindex = "101", @id = "txtFieldName" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Field Type</label>
                                @Html.DropDownList("cboFieldType", (SelectList)ViewBag.FieldTypeList, "Select Field Type", new { @id = "cboFieldType", @class = "form-control bs-select", @tabindex = "102" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Required</label>
                                <div class="input-group">
                                    <div class="icheck-inline">
                                        <label>
                                            @Html.CheckBox("chkAttribute", new Dictionary<string, object> { { "data-checkbox", "icheckbox_square-green" }, { "class", "icheck" }, { "tabindex", "103" } })
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group" style="display:none" id="dvComboValue">
                                <label class="control-label">Combo Value</label>
                                @Html.TextArea("txtCombovalue", htmlAttributes: new { @tabindex = "104", @class = "form-control", @placeholder = "Enter Field Combo", @id = "txtCombovalue" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-theme" id="btnSaveCustomField"> Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="dvCertificateItemModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="dvCertificateItemModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title" id="dvCertificateItemModalLabel">Add New Certificate Item</h4>
            </div>
            <div class="modal-body">
                <form id="frmCertificateItem">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Type</label>
                                @Html.DropDownList("cboCertificateItemType", (IList<SelectListItem>)ViewBag.CertificateItemType, "Select Type", new { @class = "form-control bs-select", @tabindex = "201", @id = "cboCertificateItemType" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Certificate Item</label>
                                @Html.TextBox("txtCertificateItem", "", new { @class = "form-control", @placeholder = "Select Certificate Item", @tabindex = "202", @id = "txtCertificateItem" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-theme" id="btnSaveCertificateItem"> Update</button>
            </div>
        </div>
    </div>
</div>

@section Footer {
    <script src="~/Content/Plugins/typeahead/handlebars.min.js"></script>
    <script src="~/Content/Plugins/typeahead/typeahead.bundle.min.js"></script>.
    <script src="/Content/Plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Scripts/jsCertificateTypeDetails.js?v=@GlobalDefaultValues.VersionNumber"></script>
}